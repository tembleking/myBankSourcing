// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameEvent = "event"

// Event mapped from table <event>
type Event struct {
	RowID         int32     `gorm:"column:row_id;type:INTEGER" json:"row_id"`
	StreamName    string    `gorm:"column:stream_name;type:TEXT" json:"stream_name"`
	StreamVersion string    `gorm:"column:stream_version;type:UNSIGNED BIG INT" json:"stream_version"`
	EventID       string    `gorm:"column:event_id;type:TEXT" json:"event_id"`
	EventName     string    `gorm:"column:event_name;type:TEXT" json:"event_name"`
	EventData     []byte    `gorm:"column:event_data;type:BLOB" json:"event_data"`
	HappenedOn    time.Time `gorm:"column:happened_on;type:TIMESTAMP" json:"happened_on"`
	ContentType   string    `gorm:"column:content_type;type:TEXT" json:"content_type"`
}

// TableName Event's table name
func (*Event) TableName() string {
	return TableNameEvent
}
